loki:
  auth_enabled: false
  commonConfig:
    replication_factor: 1
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
    aws:
      region: us-east-1
      bucketnames: <BUCKET_NAME> # eg: aws-loki-dev-chunk
      s3forcepathstyle: false
  pattern_ingester:
      enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h # 28 days retention

  storage:
    type: s3
    bucketNames:
        chunks: <BUCKET_NAME> # eg: aws-loki-dev-chunk
        ruler: <BUCKET_NAME> # eg: aws-loki-dev-ruler
        admin: <BUCKET_NAME> # eg: aws-loki-dev-admin
    s3:
      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storages or are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).
      s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name
      # AWS endpoint URL
      endpoint: s3.us-east-1.amazonaws.com
      # AWS region where the S3 bucket is located
      region: us-east-1
      # AWS secret access key
      secretAccessKey: <AWS_SECRET_ACCESS_KEY>
      # AWS access key ID
      accessKeyId: <AWS_ACCESS_KEY_ID>
      # AWS signature version (e.g., v2 or v4)
      signatureVersion: v4
      # Forces the path style for S3 (true/false)
      s3ForcePathStyle: false
      # Allows insecure (HTTP) connections (true/false)
      insecure: false
      # HTTP configuration settings
      http_config: {}

# Disable minio storage
minio:
  enabled: false

# Loki deployment configuration
deploymentMode: SingleBinary

# Single binary deployment configuration
singleBinary:
  replicas: 1
  persistence:
    enabled: true
    storageClass: local-storage
    accessModes:
      - ReadWriteOnce
    size: 1Gi

# Chunk store configuration
chunksCache:
  replicas: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Affinity rules to ensure that Loki pods are scheduled on the same node
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - loki
          topologyKey: kubernetes.io/hostname

# monitoring:
#   selfMonitoring:
#     enabled: false
#   dashboards:
#     enabled: false
#   rules:
#     enabled: false

# resultsCache:
#   enabled: false
# memcachedExporter:
#   enabled: false

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0